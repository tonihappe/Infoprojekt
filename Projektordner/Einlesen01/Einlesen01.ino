#include <FastLED.h>
//#include "Animat1.h"
//#include <fstream>
#define LEDZAHL 100
#define PIN 6
#define HELL 10
#define wait 1000
#define matrixbreite 10
#define matrixh√∂he 10
//#include "Ausgabe.h"
//#include "hexsplitter.h"
//424d760100000000000036000000280000000a0000000a00000001001800000000004001000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000e4e3fdffffffffffffffffffffffffffffffffffffffffffffffffffffff0000241ced241ced8480f54039ef241ced241ced241ced241ced241ced7d79f50000241ced241ced241ced241ced241ced241ced241ced241ced241ced241ced0000241ced241ced241ced241ced241ced241ced241ced241ced241ced241ced0000241ced241ced241ced241ced241ced241ced241ced241ced241ced241ced0000

//Animation1,
int rString[99]={255,255,255,255,255,255,255,255,255,255,255,102,102,102,102,102,102,102,102,255,255,102,102,102,102,102,102,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,102,102,102,102,102,102,255,255,102,102,102,102,102,102,102,102,255,255,255,255,255,255,255,255,255,255};
int gString[99]={204,204,204,204,204,204,204,204,204,204,204,51,51,51,51,51,51,51,51,204,204,51,255,255,255,255,255,255,51,204,204,51,255,51,51,51,51,255,51,204,204,51,255,51,153,153,51,255,51,204,204,51,255,51,153,153,51,255,51,204,204,51,255,51,51,51,51,255,51,204,204,51,255,255,255,255,255,255,51,204,204,51,51,51,51,51,51,51,51,204,204,204,204,204,204,204,204,204,204};
int bString[99]={153,153,153,153,153,153,153,153,153,153,153,255,255,255,255,255,255,255,255,153,153,255,51,51,51,51,51,51,255,153,153,255,51,102,102,102,102,51,255,153,153,255,51,102,255,255,102,51,255,153,153,255,51,102,255,255,102,51,255,153,153,255,51,102,102,102,102,51,255,153,153,255,51,51,51,51,51,51,255,153,153,255,255,255,255,255,255,255,255,153,153,153,153,153,153,153,153,153,153};
/*uint8_t test[] = {0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
                  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
                  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
                  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
                  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,
                  0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
                  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00
                 }; 
*/
CRGB matrix[LEDZAHL];
void setup()
{
  // put your setup code here, to run once:
  FastLED.addLeds<NEOPIXEL, PIN>(matrix, LEDZAHL);
  FastLED.setBrightness(HELL);
  Serial.begin(9600);

}

void loop()
{
  // put your main code here, to run repeatedly:
  for (int i = 0; i < LEDZAHL; i++)
  {
     matrix[i].setRGB(rString[i],gString[i],bString[i]);
    FastLED.show();
   // matrix[i] = (test[i]);
   // FastLED.show();
  }

}

void stringconv()
{

}
