#include <FastLED.h>
#include <avr/pgmspace.h>

//#include "Animat1.h"
//#include <fstream>
#define LEDZAHL 100
#define PIN 6
#define HELL 10
#define wait 1000
#define matrixbreite 10
#define matrixh√∂he 10
//#include "Ausgabe.h"
//#include "hexsplitter.h"
//424d760100000000000036000000280000000a0000000a00000001001800000000004001000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000e4e3fdffffffffffffffffffffffffffffffffffffffffffffffffffffff0000241ced241ced8480f54039ef241ced241ced241ced241ced241ced7d79f50000241ced241ced241ced241ced241ced241ced241ced241ced241ced241ced0000241ced241ced241ced241ced241ced241ced241ced241ced241ced241ced0000241ced241ced241ced241ced241ced241ced241ced241ced241ced241ced0000

//Animation1,
  //Bild 1
  const int A1_1R[99] PROGMEM ={255,255,255,255,255,255,255,255,255,255,255,102,102,102,102,102,102,102,102,255,255,102,102,102,102,102,102,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,102,102,102,102,102,102,255,255,102,102,102,102,102,102,102,102,255,255,255,255,255,255,255,255,255,255};
  const int A1_1G[99] PROGMEM ={204,204,204,204,204,204,204,204,204,204,204,51,51,51,51,51,51,51,51,204,204,51,255,255,255,255,255,255,51,204,204,51,255,51,51,51,51,255,51,204,204,51,255,51,153,153,51,255,51,204,204,51,255,51,153,153,51,255,51,204,204,51,255,51,51,51,51,255,51,204,204,51,255,255,255,255,255,255,51,204,204,51,51,51,51,51,51,51,51,204,204,204,204,204,204,204,204,204,204};
  const int A1_1B[99] PROGMEM ={153,153,153,153,153,153,153,153,153,153,153,255,255,255,255,255,255,255,255,153,153,255,51,51,51,51,51,51,255,153,153,255,51,102,102,102,102,51,255,153,153,255,51,102,255,255,102,51,255,153,153,255,51,102,255,255,102,51,255,153,153,255,51,102,102,102,102,51,255,153,153,255,51,51,51,51,51,51,255,153,153,255,255,255,255,255,255,255,255,153,153,153,153,153,153,153,153,153,153};
  //Bild 2
  const int A1_2R[99] PROGMEM ={255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255};
  const int A1_2G[99] PROGMEM ={51,51,51,51,51,51,51,51,51,51,51,153,153,153,153,153,153,153,153,51,51,153,204,204,204,204,204,204,153,51,51,153,204,51,51,51,51,204,153,51,51,153,204,51,255,255,51,204,153,51,51,153,204,51,255,255,51,204,153,51,51,153,204,51,51,51,51,204,153,51,51,153,204,204,204,204,204,204,153,51,51,153,153,153,153,153,153,153,153,51,51,51,51,51,51,51,51,51,51};
  const int A1_2B[99] PROGMEM ={102,102,102,102,102,102,102,102,102,102,102,255,255,255,255,255,255,255,255,102,102,255,153,153,153,153,153,153,255,102,102,255,153,255,255,255,255,153,255,102,102,255,153,255,51,51,255,153,255,102,102,255,153,255,51,51,255,153,255,102,102,255,153,255,255,255,255,153,255,102,102,255,153,153,153,153,153,153,255,102,102,255,255,255,255,255,255,255,255,102,102,102,102,102,102,102,102,102,102};
  //Bild 3
  const int A1_3R[99] PROGMEM ={102,102,102,102,102,102,102,102,102,102,102,255,255,255,255,255,255,255,255,102,102,255,255,255,255,255,255,255,255,102,102,255,255,255,255,255,255,255,255,102,102,255,255,255,102,102,255,255,255,102,102,255,255,255,102,102,255,255,255,102,102,255,255,255,255,255,255,255,255,102,102,255,255,255,255,255,255,255,255,102,102,255,255,255,255,255,255,255,255,102,102,102,102,102,102,102,102,102,102};
  const int A1_3G[99] PROGMEM ={255,255,255,255,255,255,255,255,255,255,255,51,51,51,51,51,51,51,51,255,255,51,153,153,153,153,153,153,51,255,255,51,153,204,204,204,204,153,51,255,255,51,153,204,51,51,204,153,51,255,255,51,153,204,51,51,204,153,51,255,255,51,153,204,204,204,204,153,51,255,255,51,153,153,153,153,153,153,51,255,255,51,51,51,51,51,51,51,51,255,255,255,255,255,255,255,255,255,255};
  const int A1_3B[99] PROGMEM ={51,51,51,51,51,51,51,51,51,51,51,102,102,102,102,102,102,102,102,51,51,102,255,255,255,255,255,255,102,51,51,102,255,153,153,153,153,255,102,51,51,102,255,153,255,255,153,255,102,51,51,102,255,153,255,255,153,255,102,51,51,102,255,153,153,153,153,255,102,51,51,102,255,255,255,255,255,255,102,51,51,102,102,102,102,102,102,102,102,51,51,51,51,51,51,51,51,51,51};
  //Bild 4
  const int A1_4R[99] PROGMEM ={102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,255,255,255,255,255,255,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102};
  const int A1_4G[99] PROGMEM ={51,51,51,51,51,51,51,51,51,51,51,255,255,255,255,255,255,255,255,51,51,255,51,51,51,51,51,51,255,51,51,255,51,153,153,153,153,51,255,51,51,255,51,153,204,204,153,51,255,51,51,255,51,153,204,204,153,51,255,51,51,255,51,153,153,153,153,51,255,51,51,255,51,51,51,51,51,51,255,51,51,255,255,255,255,255,255,255,255,51,51,51,51,51,51,51,51,51,51};
  const int A1_4B[99] PROGMEM ={255,255,255,255,255,255,255,255,255,255,255,51,51,51,51,51,51,51,51,255,255,51,102,102,102,102,102,102,51,255,255,51,102,255,255,255,255,102,51,255,255,51,102,255,153,153,255,102,51,255,255,51,102,255,153,153,255,102,51,255,255,51,102,255,255,255,255,102,51,255,255,51,102,102,102,102,102,102,51,255,255,51,51,51,51,51,51,51,51,255,255,255,255,255,255,255,255,255,255};
  //Bild 5
  const int A1_5R[99] PROGMEM ={255,255,255,255,255,255,255,255,255,255,255,102,102,102,102,102,102,102,102,255,255,102,102,102,102,102,102,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,255,255,255,255,102,102,255,255,102,102,102,102,102,102,102,102,255,255,102,102,102,102,102,102,102,102,255,255,255,255,255,255,255,255,255,255};
  const int A1_5G[99] PROGMEM ={204,204,204,204,204,204,204,204,204,204,204,51,51,51,51,51,51,51,51,204,204,51,255,255,255,255,255,255,51,204,204,51,255,51,51,51,51,255,51,204,204,51,255,51,153,153,51,255,51,204,204,51,255,51,153,153,51,255,51,204,204,51,255,51,51,51,51,255,51,204,204,51,255,255,255,255,255,255,51,204,204,51,51,51,51,51,51,51,51,204,204,204,204,204,204,204,204,204,204};
  const int A1_5B[99] PROGMEM ={153,153,153,153,153,153,153,153,153,153,153,255,255,255,255,255,255,255,255,153,153,255,51,51,51,51,51,51,255,153,153,255,51,102,102,102,102,51,255,153,153,255,51,102,255,255,102,51,255,153,153,255,51,102,255,255,102,51,255,153,153,255,51,102,102,102,102,51,255,153,153,255,51,51,51,51,51,51,255,153,153,255,255,255,255,255,255,255,255,153,153,153,153,153,153,153,153,153,153};

CRGB matrix[LEDZAHL];
void setup()
{
  // put your setup code here, to run once:
  FastLED.addLeds<NEOPIXEL, PIN>(matrix, LEDZAHL);
  FastLED.setBrightness(HELL);
  Serial.begin(9600);

}

void loop()
{
  // put your main code here, to run repeatedly:
 //Animat1();
for (int i = 0; i < LEDZAHL; i++)
   {
     matrix[i].setRGB(A1_1R[i],A1_1G[i],A1_1B[i]);
     FastLED.show();
   }
}
/*
void Animation(nB)
{ //for(nB
}
*/
void Animat1()
{
for (int n=0; n<=10; n++)
 {
  for (int i = 0; i < LEDZAHL; i++)
   {
     matrix[i].setRGB(A1_1R[i],A1_1G[i],A1_1B[i]);
     FastLED.show();
   }
   FastLED.show();
   delay(50);
  for (int i = 0; i < LEDZAHL; i++)
   {
     matrix[i].setRGB(A1_2R[i],A1_2G[i],A1_2B[i]);
     
   }
   FastLED.show();
   delay(50);
   
   for (int i = 0; i < LEDZAHL; i++)
   {
     matrix[i].setRGB(A1_3R[i],A1_3G[i],A1_3B[i]);
     
   }
   FastLED.show();
   delay(50);
   for (int i = 0; i < LEDZAHL; i++)
   {
     matrix[i].setRGB(A1_4R[i],A1_4G[i],A1_4B[i]);
     
   }
   FastLED.show();
   delay(50);
   for (int i = 0; i < LEDZAHL; i++)
   {
     matrix[i].setRGB(A1_5R[i],A1_5G[i],A1_5B[i]);
     
   }
   FastLED.show();
   delay(50);
 }
}
